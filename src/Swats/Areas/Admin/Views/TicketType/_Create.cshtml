@model CreateTicketTypeCommand

@{
    var createError =  TempData["CreateError"]?.ToString() ?? "";
}

@if (!string.IsNullOrWhiteSpace(createError))
{
    <div _="init transition my opacity to 0% over 7 seconds" 
        class="absolute top-0 right-0 px-5 py-1 z-50">
        <div  class="flex flex-row bg-red-400 rounded px-5 py-1 text-white drop-shadow-lg">
             <div class="pr-3">
                <ion-icon name="close-circle" style="color: white;"></ion-icon> 
             </div> 
            <div>@createError</div>
        </div>
    </div>
}

<div id="main-swap">
    <section>
        @await Component.InvokeAsync("Breadcrumbs", new {
            crumbs = new []
            { 
                new SelectListItem{Text = "Home", Value = "/"}, 
                new SelectListItem {Text="Admin", Value="/admin"},
                new SelectListItem{Text = "Ticket Type", Value = "/admin/tickettype"}
            }, 
            currentPage = "New Ticket Type"
        })
    </section>
    <form asp-controller="Tags" asp-action="Create" method="post">
        <section class=" flex w-full font-bold text-2xl pb-5">
            <div class="flex w-1/2">New Ticket Type</div>
            <div class="flex w-1/2 justify-end">
                <div class="flex flex-row">
                    <button class="btn-default"
                        hx-get="/admin/tickettype" 
                        hx-trigger="click" 
                        hx-target="#main-swap" 
                        hx-swap="outerHTML"
                        hx-push-url="true">
                        <div class="flex flex-row "> 
                            <div class="flex">Cancel</div>
                       </div>
                    </button> 
                    <span class="mr-4"></span>
                     <button class="btn-primary"
                        hx-post="/admin/tickettype/create" 
                        hx-trigger="click" 
                        hx-target="#main-swap" 
                        hx-swap="outerHTML"
                        hx-push-url="true">
                       <div class="flex flex-row ">
                            <div class="mr-2 flex items-center "> 
                                <ion-icon name="save-outline" style="font-size: 16px;"></ion-icon>
                            </div> 
                            <div class="flex">Save</div>
                       </div>
                    </button>
                </div>
            </div>
        </section>

        <div class="w-full bg-white drop-shadow-lg rounded px-10 py-10">

            <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
                @* name *@
                <div class="form-control">
                    <label asp-for="@Model.Name" class="form-label">
                        Name
                    </label>
                    <input asp-for="@Model.Name" class="form-input" />
                    <span asp-validation-for="@Model.Name" class="form-input-error"></span>
                </div>

                <div class="form-control">
                    <label asp-for="@Model.Visibility" class="form-label">
                        Visibility
                    </label>
                    <select asp-for="@Model.Visibility" class="form-input" asp-items="@Html.GetEnumSelectList<DefaultType>()">
                        <option value=""></option>
                    </select>
                    <span asp-validation-for="@Model.Visibility" class="form-input-error"></span>
                </div>

                <div class="form-control">
                    <label asp-for="@Model.Status" class="form-label">
                        Status
                    </label>
                    <select asp-for="@Model.Status" class="form-input" asp-items="@Html.GetEnumSelectList<DefaultStatus>()">
                    </select>
                    <span asp-validation-for="@Model.Status" class="form-input-error"></span>
                </div>

            </div>
            <div class="grid grid-cols-1 gap-5 py-4">
                @* description *@
                <div class="form-control">
                    <label asp-for="@Model.Description" class="form-label">
                       Description
                    </label>
                    <textarea asp-for="@Model.Description" class="form-input" cols="30" rows="10"></textarea>
                    <span asp-validation-for="@Model.Description" class="form-input-error"></span>
                </div>
            </div>
        </div>
    </form>
</div>